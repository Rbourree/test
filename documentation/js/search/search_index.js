var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.877,1,1.614]],["body/modules/AppModule.html",[0,2.929,1,2.889,2,1.935,3,1.663,4,2.298,5,2.298,6,1.663,7,3.479,8,2.298,9,2.298,10,2.298,11,2.2,12,0.049,13,3.083,14,2.298,15,1.935,16,0.56,17,0.477,18,0.477,19,2.849,20,3.083,21,2.518,22,1.799,23,1.663,24,2.849,25,2.298,26,1.447,27,1.447,28,2.298,29,1.941,30,2.298,31,2.298,32,2.849,33,0.56,34,0.109,35,0.035,36,0.035]],["title/classes/Balance.html",[34,0.106,37,0.631]],["body/classes/Balance.html",[12,0.048,16,0.574,17,0.489,18,0.489,33,0.574,34,0.112,35,0.035,36,0.035,37,1.161,38,0.767,39,2.356,40,0.41,41,1.021,42,4.02,43,3.385,44,1.771,45,1.973,46,1.705,47,2.364,48,0.997,49,2.921,50,1.14,51,1.14,52,0.731,53,1.14,54,2.921,55,2.921]],["title/classes/BalanceDto.html",[34,0.106,56,1.229]],["body/classes/BalanceDto.html",[12,0.05,16,0.488,17,0.416,18,0.416,22,1.358,33,0.79,34,0.175,35,0.032,36,0.032,37,0.916,38,0.653,40,0.349,41,0.914,44,1.491,47,2.209,48,0.794,52,0.767,56,1.934,57,1.45,58,2.031,59,3.11,60,2.485,61,1.491,62,2.955,63,2.485,64,2.727,65,2.363,66,2.727,67,1.45,68,1.45,69,1.785,70,0.969,71,0.969,72,1.45,73,1.104,74,2.363,75,2.363,76,1.104,77,1.261]],["title/classes/DuplicatedReason.html",[34,0.106,78,1.229]],["body/classes/DuplicatedReason.html",[12,0.049,16,0.493,17,0.42,18,0.42,33,0.793,34,0.155,35,0.032,36,0.032,37,0.921,38,0.658,40,0.352,41,0.92,44,1.383,45,1.272,46,1.463,48,0.921,50,0.978,51,0.978,52,0.769,53,0.978,61,1.497,70,1.574,71,1.704,78,1.556,79,1.463,80,2.74,81,1.858,82,2.74,83,2.044,84,2.506,85,2.823,86,2.021,87,2.021,88,2.377,89,2.377,90,1.702,91,2.377,92,1.702,93,1.272,94,1.702,95,2.377,96,1.114,97,1.702,98,1.702,99,1.702]],["title/classes/MismatchReason.html",[34,0.106,96,1.229]],["body/classes/MismatchReason.html",[12,0.049,16,0.497,17,0.423,18,0.423,33,0.797,34,0.155,35,0.032,36,0.032,37,1.052,38,0.664,40,0.355,41,0.925,44,1.207,45,1.283,46,2.056,48,0.925,50,0.986,51,0.986,52,0.772,53,0.986,61,1.503,70,1.374,71,1.374,78,1.123,79,1.476,80,2.752,81,1.863,82,2.752,83,1.476,85,2.841,86,2.039,87,2.039,88,2.391,89,2.391,90,1.716,91,2.391,92,1.716,93,1.283,94,1.716,95,2.391,96,1.565,97,1.716,98,1.716,99,1.716,100,2.528]],["title/classes/Movement.html",[34,0.106,101,1.404]],["body/classes/Movement.html",[12,0.047,16,0.482,17,0.411,18,0.411,33,0.482,34,0.094,35,0.031,36,0.031,38,0.644,40,0.344,41,0.906,42,4.203,43,3.539,44,1.728,45,1.751,47,2.518,48,1.04,50,0.957,51,0.957,52,0.763,53,0.957,61,1.483,70,1.688,71,1.779,72,2.662,83,1.432,101,1.751,102,1.979,103,2.453,104,2.453,105,2.453,106,2.453,107,2.453]],["title/classes/MovementDto.html",[34,0.106,69,1.229]],["body/classes/MovementDto.html",[12,0.05,16,0.45,17,0.383,18,0.383,22,1.281,33,0.755,34,0.17,35,0.03,36,0.03,37,0.522,38,0.601,40,0.321,41,0.863,44,1.438,47,2.255,48,0.957,52,0.797,56,1.706,57,1.336,58,2.449,59,3.138,61,1.522,62,2.848,64,2.607,65,2.607,66,2.607,67,1.336,68,1.336,69,1.864,70,1.498,71,1.498,72,2.241,73,1.017,74,2.23,75,2.23,76,1.017,77,1.162,108,2.29,109,2.29,110,2.29,111,2.29]],["title/classes/MovementValidationService.html",[29,1.404,34,0.106]],["body/classes/MovementValidationService.html",[12,0.051,16,0.296,17,0.252,18,0.252,22,1.161,29,1.215,33,0.296,34,0.058,35,0.022,36,0.022,37,1.031,38,0.396,40,0.418,48,0.773,50,1.322,51,1.322,52,0.619,53,1.322,76,1.506,77,1.721,78,0.67,81,1.161,93,1.721,96,0.67,101,2.524,112,2.982,113,1.216,114,1.625,115,2.393,116,2.393,117,2.393,118,1.93,119,2.393,120,1.507,121,2.301,122,2.393,123,1.507,124,2.393,125,1.507,126,2.393,127,1.507,128,1.216,129,1.507,130,1.507,131,1.507,132,1.93,133,1.216,134,2.301,135,2.672,136,2.393,137,1.507,138,1.507,139,1.507,140,1.507,141,2.982,142,1.507,143,2.393,144,1.507,145,1.507,146,1.216,147,1.507,148,1.507,149,1.507,150,1.507,151,1.507,152,1.507,153,1.507,154,1.507,155,2.301,156,2.393,157,1.216,158,1.507,159,1.216,160,1.507,161,1.507,162,2.393,163,1.507,164,2.393,165,1.507,166,1.507,167,1.507,168,1.507,169,1.507,170,1.507,171,1.507,172,1.507,173,1.507,174,1.507,175,1.507,176,1.507,177,1.507,178,1.507]],["title/controllers/MovementsController.html",[21,1.614,179,1.614]],["body/controllers/MovementsController.html",[11,1.789,12,0.051,16,0.491,17,0.418,18,0.418,20,2.012,21,2.038,22,1.571,23,1.457,25,2.012,26,1.267,27,1.267,28,2.012,33,0.491,34,0.096,35,0.032,36,0.032,40,0.35,43,1.694,48,0.569,50,0.974,51,0.974,52,0.418,53,0.974,58,1.457,61,1.196,73,1.937,76,1.109,114,2.37,118,2.815,121,1.694,134,2.733,135,1.694,155,2.37,157,2.012,179,1.457,180,2.012,181,2.495,182,2.495,183,3.491,184,2.495,185,3.491,186,4.36,187,2.495,188,2.495,189,2.495,190,2.495,191,2.012,192,2.495,193,2.012,194,2.495,195,2.012,196,2.495,197,2.495,198,2.495,199,2.012]],["title/classes/Reason.html",[34,0.106,81,1.079]],["body/classes/Reason.html",[12,0.05,16,0.537,17,0.457,18,0.457,33,0.83,34,0.162,35,0.034,36,0.034,37,0.963,38,0.717,40,0.383,41,0.975,44,0.935,46,1.593,48,0.847,52,0.793,61,1.552,70,1.449,71,1.449,78,1.213,79,1.593,80,2.521,81,1.767,82,2.865,83,1.593,88,2.521,89,2.521,90,1.853,91,2.521,92,1.853,93,1.386,94,1.853,95,2.521,96,1.213,97,1.853,98,1.853,99,1.853,200,2.729,201,2.729]],["title/classes/ValidateMovementsDto.html",[34,0.106,73,1.229]],["body/classes/ValidateMovementsDto.html",[12,0.05,16,0.484,17,0.412,18,0.412,22,1.35,33,0.786,34,0.175,35,0.032,36,0.032,37,0.562,38,0.647,40,0.346,41,0.909,44,1.186,47,2.03,48,0.789,52,0.765,56,1.927,57,1.438,58,2.019,59,2.944,61,1.37,62,2.714,64,2.714,65,2.349,66,2.714,67,1.438,68,1.438,69,1.927,70,0.961,71,0.961,72,1.438,73,1.537,74,2.349,75,2.349,76,1.777,77,2.03,202,3.46,203,3.46,204,2.464,205,2.464]],["title/injectables/ValidateMovementsUseCase.html",[11,1.229,206,1.614]],["body/injectables/ValidateMovementsUseCase.html",[11,1.342,12,0.05,16,0.401,17,0.342,18,0.342,22,1.732,23,1.191,26,1.825,27,1.825,29,2.254,30,1.646,31,1.646,33,0.707,34,0.078,35,0.028,36,0.028,37,0.466,40,0.286,45,1.036,48,0.689,50,1.178,51,1.178,52,0.665,53,1.178,56,1.342,69,1.342,76,0.907,77,1.825,81,1.178,93,1.036,101,1.036,114,2.05,121,1.386,132,2.436,133,1.646,134,2.05,135,2.441,155,1.386,159,1.646,191,1.646,193,1.646,195,1.646,199,1.646,206,1.763,207,2.041,208,2.441,209,1.386,210,3.02,211,2.041,212,2.041,213,3.02,214,2.698,215,2.041,216,2.041,217,2.441,218,2.041,219,2.041,220,2.041,221,2.041,222,2.041,223,2.041,224,2.899,225,2.041,226,2.041,227,2.041,228,2.041,229,2.041,230,2.041,231,2.041,232,2.041,233,2.041]],["title/coverage.html",[234,2.543]],["body/coverage.html",[6,1.408,11,1.072,12,0.049,18,0.404,21,1.408,26,2.007,27,2.007,29,1.225,34,0.192,35,0.031,36,0.031,37,0.551,39,1.946,52,0.662,56,1.072,57,2.307,69,1.072,73,1.072,78,1.072,79,2.307,81,0.941,96,1.072,101,1.225,102,1.946,112,1.946,113,1.946,141,4.255,179,1.408,180,1.946,206,1.408,208,2.684,209,2.684,214,1.638,217,1.638,224,1.946,234,1.638,235,1.946,236,2.413,237,2.413,238,4.296,239,3.409,240,3.953,241,3.953,242,2.413,243,3.409,244,2.413,245,1.946,246,2.413,247,2.413,248,2.413]],["title/dependencies.html",[3,1.937,249,1.873]],["body/dependencies.html",[3,2.093,12,0.05,23,2.093,34,0.17,35,0.04,36,0.04,67,2.093,68,2.093,250,4.813,251,3.586,252,3.586,253,3.586,254,3.586,255,3.586,256,3.586,257,3.586,258,3.586,259,3.586,260,3.586]],["title/miscellaneous/functions.html",[261,1.356,262,2.675]],["body/miscellaneous/functions.html",[6,2.956,12,0.043,35,0.043,36,0.043,40,0.566,245,3.253,261,2.354,262,3.253,263,4.033]],["title/index.html",[40,0.326,264,2.322,265,2.322]],["body/index.html",[12,0.047,15,2.617,17,0.321,35,0.026,36,0.026,146,3.109,234,1.303,235,1.548,266,1.92,267,1.92,268,3.467,269,1.92,270,1.92,271,1.92,272,1.92,273,1.92,274,1.92,275,1.548,276,3.467,277,1.92,278,1.92,279,1.92,280,3.855,281,1.92,282,3.467,283,4.504,284,1.92,285,4.504,286,1.92,287,1.92,288,1.92,289,2.885,290,1.92,291,1.92,292,1.92,293,3.467,294,1.92,295,2.885,296,1.92,297,1.92,298,1.92,299,1.92,300,1.92,301,1.92,302,1.92,303,1.92,304,3.855,305,2.885,306,1.92,307,3.467,308,1.92,309,3.109,310,2.885,311,1.92,312,1.92,313,1.92,314,1.92,315,1.92,316,1.92,317,3.467,318,1.92,319,1.92,320,1.92,321,2.885,322,1.92,323,1.92,324,1.92,325,3.467,326,1.92,327,1.92,328,1.92,329,1.92,330,1.92,331,1.92,332,1.92,333,2.885,334,1.92,335,1.92,336,1.92,337,1.92,338,1.92,339,1.92,340,2.885,341,1.92,342,1.92,343,1.92,344,2.885,345,2.885,346,1.92,347,1.92,348,1.92,349,1.92,350,1.92,351,1.92,352,1.92,353,1.92,354,1.92,355,1.92,356,1.92,357,1.548,358,1.92,359,1.92,360,1.92,361,1.92,362,1.92,363,1.92,364,1.548]],["title/modules.html",[2,2.543]],["body/modules.html",[1,2.387,2,2.777,12,0.044,35,0.044,36,0.044,309,3.298,365,4.09,366,4.09,367,4.09]],["title/overview.html",[368,3.021]],["body/overview.html",[0,2.965,1,2.91,3,2.043,4,2.823,5,2.823,6,2.043,7,2.823,8,2.823,9,2.823,10,2.823,11,2.115,12,0.043,13,3.522,14,2.823,15,2.376,35,0.04,36,0.04,38,0.919,179,2.043,206,2.043,368,2.823,369,4.761,370,3.5]],["title/properties.html",[41,0.871,249,1.873]],["body/properties.html",[12,0.049,35,0.043,36,0.043,41,1.038,275,3.186,357,3.186,364,3.186,371,3.951,372,3.951,373,3.951]],["title/miscellaneous/typealiases.html",[261,1.356,374,3.318]],["body/miscellaneous/typealiases.html",[12,0.041,26,1.867,27,2.471,35,0.041,36,0.041,40,0.516,52,0.815,128,3.631,208,2.496,209,3.304,214,3.057,217,3.057,261,2.146,375,3.677,376,4.502]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":141,"title":{},"body":{"classes/MovementValidationService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":372,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":369,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":370,"title":{},"body":{"overview.html":{}}}],["a.date.gettime",{"_index":160,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["accepted",{"_index":196,"title":{},"body":{"controllers/MovementsController.html":{}}}],["alias",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":350,"title":{},"body":{"index.html":{}}}],["amount",{"_index":72,"title":{},"body":{"classes/BalanceDto.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["application",{"_index":321,"title":{},"body":{"index.html":{}}}],["application/use",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{}}}],["applications",{"_index":274,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":357,"title":{},"body":{"index.html":{},"properties.html":{}}}],["b",{"_index":159,"title":{},"body":{"classes/MovementValidationService.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["b.balance",{"_index":232,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["b.date.gettime",{"_index":161,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["backers",{"_index":351,"title":{},"body":{"index.html":{}}}],["balance",{"_index":37,"title":{"classes/Balance.html":{}},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["balance(new",{"_index":230,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["balance_mismatch",{"_index":97,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["balancedto",{"_index":56,"title":{"classes/BalanceDto.html":{}},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["balancepoint",{"_index":171,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["balancepoint.balance",{"_index":169,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["balances",{"_index":77,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["balances.foreach((balancepoint",{"_index":163,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["board",{"_index":343,"title":{},"body":{"index.html":{}}}],["body",{"_index":188,"title":{},"body":{"controllers/MovementsController.html":{}}}],["boolean",{"_index":133,"title":{},"body":{"classes/MovementValidationService.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":367,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":365,"title":{},"body":{"modules.html":{}}}],["building",{"_index":269,"title":{},"body":{"index.html":{}}}],["case",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{}}}],["case.ts",{"_index":209,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["case.ts:19",{"_index":212,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["case.ts:21",{"_index":215,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["case/validate",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["channel",{"_index":312,"title":{},"body":{"index.html":{}}}],["check",{"_index":146,"title":{},"body":{"classes/MovementValidationService.html":{},"index.html":{}}}],["checkbalance",{"_index":115,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["checkbalance(balances",{"_index":119,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["class",{"_index":34,"title":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{}},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":38,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["come",{"_index":301,"title":{},"body":{"index.html":{}}}],["console.log(movements",{"_index":170,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["const",{"_index":135,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["constructor",{"_index":45,"title":{},"body":{"classes/Balance.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["constructor(date",{"_index":46,"title":{},"body":{"classes/Balance.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["constructor(id",{"_index":83,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/Reason.html":{}}}],["constructor(movementvalidationservice",{"_index":211,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["constructor(private",{"_index":191,"title":{},"body":{"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["controller",{"_index":179,"title":{"controllers/MovementsController.html":{}},"body":{"controllers/MovementsController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('/movements",{"_index":190,"title":{},"body":{"controllers/MovementsController.html":{}}}],["controllers",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{}}}],["courses",{"_index":319,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":234,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cumulativebalance",{"_index":164,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["data",{"_index":216,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["data.balances.map",{"_index":229,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["data.movements.map",{"_index":222,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["date",{"_index":44,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{}}}],["date(b.date",{"_index":231,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["date(m.date",{"_index":226,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["date.toisostring",{"_index":95,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"controllers/MovementsController.html":{},"classes/ValidateMovementsDto.html":{}}}],["deeper",{"_index":314,"title":{},"body":{"index.html":{}}}],["defined",{"_index":48,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":275,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":82,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["detected",{"_index":94,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["development",{"_index":286,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":327,"title":{},"body":{"index.html":{}}}],["discord",{"_index":311,"title":{},"body":{"index.html":{}}}],["dive",{"_index":313,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":235,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain/entities/balance.entity",{"_index":220,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["domain/entities/movement.entity",{"_index":218,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["domain/entities/reason.entity",{"_index":219,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["domain/services/movement",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["dup.date",{"_index":154,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["dup.wording",{"_index":153,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["duplicate",{"_index":92,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["duplicate_operations",{"_index":90,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["duplicated",{"_index":147,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["duplicatedreason",{"_index":78,"title":{"classes/DuplicatedReason.html":{}},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"coverage.html":{}}}],["duplicatedreason(dup.id",{"_index":152,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["duplicateoperations",{"_index":148,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["duplicateoperations.foreach(dup",{"_index":151,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["duplicateoperations.length",{"_index":150,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["e2e",{"_index":296,"title":{},"body":{"index.html":{}}}],["each",{"_index":74,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["efficient",{"_index":270,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":332,"title":{},"body":{"index.html":{}}}],["entities/balance.entity",{"_index":130,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["entities/movement.entity",{"_index":129,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["entities/reason.entity",{"_index":131,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["example",{"_index":282,"title":{},"body":{"index.html":{}}}],["execute",{"_index":210,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["execute(data",{"_index":213,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["expected",{"_index":99,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["experience",{"_index":316,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":80,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["failed",{"_index":198,"title":{},"body":{"controllers/MovementsController.html":{}}}],["few",{"_index":299,"title":{},"body":{"index.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["filter((op",{"_index":165,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["follow",{"_index":336,"title":{},"body":{"index.html":{}}}],["framework",{"_index":268,"title":{},"body":{"index.html":{}}}],["full",{"_index":331,"title":{},"body":{"index.html":{}}}],["function",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":262,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getduplicateoperations",{"_index":116,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["getduplicateoperations(operations",{"_index":122,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["getting",{"_index":264,"title":{"index.html":{}},"body":{}}],["graph",{"_index":322,"title":{},"body":{"index.html":{}}}],["grow",{"_index":347,"title":{},"body":{"index.html":{}}}],["hands",{"_index":315,"title":{},"body":{"index.html":{}}}],["handy",{"_index":302,"title":{},"body":{"index.html":{}}}],["help",{"_index":329,"title":{},"body":{"index.html":{}}}],["here",{"_index":355,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":361,"title":{},"body":{"index.html":{}}}],["id",{"_index":70,"title":{},"body":{"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{}}}],["identifier",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["imports",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["inherited",{"_index":85,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{}}}],["injectable",{"_index":206,"title":{"injectables/ValidateMovementsUseCase.html":{}},"body":{"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":207,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["installcompile",{"_index":284,"title":{},"body":{"index.html":{}}}],["interact",{"_index":323,"title":{},"body":{"index.html":{}}}],["interface/controllers/movements.controller",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["interface/movements.dto",{"_index":221,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["isarray",{"_index":64,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["isarray()@validatenested({each",{"_index":202,"title":{},"body":{"classes/ValidateMovementsDto.html":{}}}],["isdatestring",{"_index":62,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["isnumber",{"_index":59,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["isstring",{"_index":65,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["isvalid",{"_index":132,"title":{},"body":{"classes/MovementValidationService.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["job",{"_index":340,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":342,"title":{},"body":{"index.html":{}}}],["join",{"_index":353,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":358,"title":{},"body":{"index.html":{}}}],["learn",{"_index":306,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":364,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":345,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":338,"title":{},"body":{"index.html":{}}}],["literal",{"_index":128,"title":{},"body":{"classes/MovementValidationService.html":{},"miscellaneous/typealiases.html":{}}}],["looking",{"_index":339,"title":{},"body":{"index.html":{}}}],["loop",{"_index":334,"title":{},"body":{"index.html":{}}}],["m",{"_index":223,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["m.amount",{"_index":228,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["m.wording",{"_index":227,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["matching",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["message",{"_index":186,"title":{},"body":{"controllers/MovementsController.html":{}}}],["metadata",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":114,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["miscellaneous",{"_index":261,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":98,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["mismatchpoint",{"_index":138,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["mismatchpoint.foreach(point",{"_index":142,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["mismatchpoint.length",{"_index":140,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["mismatchpoints",{"_index":162,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["mismatchpoints.push(balancepoint",{"_index":172,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["mismatchreason",{"_index":96,"title":{"classes/MismatchReason.html":{}},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"coverage.html":{}}}],["mismatchreason(point.date",{"_index":144,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["mit",{"_index":344,"title":{},"body":{"index.html":{}}}],["mode",{"_index":289,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":307,"title":{},"body":{"index.html":{}}}],["movement",{"_index":101,"title":{"classes/Movement.html":{}},"body":{"classes/Movement.html":{},"classes/MovementValidationService.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["movement(m.id",{"_index":225,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["movementdto",{"_index":69,"title":{"classes/MovementDto.html":{}},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["movements",{"_index":76,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["movements.dto",{"_index":189,"title":{},"body":{"controllers/MovementsController.html":{}}}],["movements.use",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["movementscontroller",{"_index":21,"title":{"controllers/MovementsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{},"coverage.html":{}}}],["movementvalidationservice",{"_index":29,"title":{"classes/MovementValidationService.html":{}},"body":{"modules/AppModule.html":{},"classes/MovementValidationService.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["myśliwiec",{"_index":359,"title":{},"body":{"index.html":{}}}],["name",{"_index":51,"title":{},"body":{"classes/Balance.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["need",{"_index":328,"title":{},"body":{"index.html":{}}}],["nest",{"_index":276,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":363,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":304,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":224,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["node.js",{"_index":267,"title":{},"body":{"index.html":{}}}],["npm",{"_index":283,"title":{},"body":{"index.html":{}}}],["number",{"_index":47,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["o.id",{"_index":177,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["offer",{"_index":341,"title":{},"body":{"index.html":{}}}],["official",{"_index":317,"title":{},"body":{"index.html":{}}}],["op",{"_index":174,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["op.amount",{"_index":168,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["op.date",{"_index":166,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["op.id",{"_index":178,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["open",{"_index":346,"title":{},"body":{"index.html":{}}}],["operations",{"_index":93,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["operations.filter",{"_index":173,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["operations.sort((a",{"_index":158,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["optional",{"_index":53,"title":{},"body":{"classes/Balance.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":368,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":249,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":50,"title":{},"body":{"classes/Balance.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["part",{"_index":330,"title":{},"body":{"index.html":{}}}],["payload",{"_index":185,"title":{},"body":{"controllers/MovementsController.html":{}}}],["please",{"_index":310,"title":{},"body":{"index.html":{}}}],["point.balance",{"_index":145,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["post",{"_index":187,"title":{},"body":{"controllers/MovementsController.html":{}}}],["post('/validation",{"_index":183,"title":{},"body":{"controllers/MovementsController.html":{}}}],["prefix",{"_index":181,"title":{},"body":{"controllers/MovementsController.html":{}}}],["production",{"_index":291,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":266,"title":{},"body":{"index.html":{}}}],["project",{"_index":280,"title":{},"body":{"index.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":42,"title":{},"body":{"classes/Balance.html":{},"classes/Movement.html":{}}}],["questions",{"_index":308,"title":{},"body":{"index.html":{}}}],["read",{"_index":354,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":43,"title":{},"body":{"classes/Balance.html":{},"classes/Movement.html":{},"controllers/MovementsController.html":{}}}],["real",{"_index":324,"title":{},"body":{"index.html":{}}}],["reason",{"_index":81,"title":{"classes/Reason.html":{}},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/MovementValidationService.html":{},"classes/Reason.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{}}}],["reason:2",{"_index":87,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{}}}],["reason:3",{"_index":86,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{}}}],["reasons",{"_index":134,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["reasons.length",{"_index":156,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["reasons.push(new",{"_index":143,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["reflect",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":279,"title":{},"body":{"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":300,"title":{},"body":{"index.html":{}}}],["result",{"_index":193,"title":{},"body":{"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["result.isvalid",{"_index":195,"title":{},"body":{"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["result.reasons",{"_index":199,"title":{},"body":{"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["results",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":155,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["returns",{"_index":121,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["run",{"_index":285,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":271,"title":{},"body":{"index.html":{}}}],["self",{"_index":175,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["self.findindex((o",{"_index":176,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["server",{"_index":272,"title":{},"body":{"index.html":{}}}],["setup",{"_index":281,"title":{},"body":{"index.html":{}}}],["side",{"_index":273,"title":{},"body":{"index.html":{}}}],["sortbydate",{"_index":117,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["sortbydate(operations",{"_index":124,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["sortedoperations",{"_index":136,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"index.html":{}}}],["sponsors",{"_index":349,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validate",{"_index":376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/application/use",{"_index":208,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/domain/entities/balance.entity.ts",{"_index":39,"title":{},"body":{"classes/Balance.html":{},"coverage.html":{}}}],["src/domain/entities/balance.entity.ts:1",{"_index":49,"title":{},"body":{"classes/Balance.html":{}}}],["src/domain/entities/balance.entity.ts:3",{"_index":55,"title":{},"body":{"classes/Balance.html":{}}}],["src/domain/entities/balance.entity.ts:4",{"_index":54,"title":{},"body":{"classes/Balance.html":{}}}],["src/domain/entities/movement.entity.ts",{"_index":102,"title":{},"body":{"classes/Movement.html":{},"coverage.html":{}}}],["src/domain/entities/movement.entity.ts:1",{"_index":103,"title":{},"body":{"classes/Movement.html":{}}}],["src/domain/entities/movement.entity.ts:3",{"_index":106,"title":{},"body":{"classes/Movement.html":{}}}],["src/domain/entities/movement.entity.ts:4",{"_index":105,"title":{},"body":{"classes/Movement.html":{}}}],["src/domain/entities/movement.entity.ts:5",{"_index":107,"title":{},"body":{"classes/Movement.html":{}}}],["src/domain/entities/movement.entity.ts:6",{"_index":104,"title":{},"body":{"classes/Movement.html":{}}}],["src/domain/entities/reason.entity.ts",{"_index":79,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{},"coverage.html":{}}}],["src/domain/entities/reason.entity.ts:15",{"_index":100,"title":{},"body":{"classes/MismatchReason.html":{}}}],["src/domain/entities/reason.entity.ts:2",{"_index":201,"title":{},"body":{"classes/Reason.html":{}}}],["src/domain/entities/reason.entity.ts:3",{"_index":200,"title":{},"body":{"classes/Reason.html":{}}}],["src/domain/entities/reason.entity.ts:7",{"_index":84,"title":{},"body":{"classes/DuplicatedReason.html":{}}}],["src/domain/services/movement",{"_index":112,"title":{},"body":{"classes/MovementValidationService.html":{},"coverage.html":{}}}],["src/interface/controllers/movements.controller.ts",{"_index":180,"title":{},"body":{"controllers/MovementsController.html":{},"coverage.html":{}}}],["src/interface/controllers/movements.controller.ts:10",{"_index":184,"title":{},"body":{"controllers/MovementsController.html":{}}}],["src/interface/movements.dto.ts",{"_index":57,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{},"coverage.html":{}}}],["src/interface/movements.dto.ts:13",{"_index":63,"title":{},"body":{"classes/BalanceDto.html":{}}}],["src/interface/movements.dto.ts:16",{"_index":60,"title":{},"body":{"classes/BalanceDto.html":{}}}],["src/interface/movements.dto.ts:21",{"_index":110,"title":{},"body":{"classes/MovementDto.html":{}}}],["src/interface/movements.dto.ts:24",{"_index":109,"title":{},"body":{"classes/MovementDto.html":{}}}],["src/interface/movements.dto.ts:27",{"_index":111,"title":{},"body":{"classes/MovementDto.html":{}}}],["src/interface/movements.dto.ts:30",{"_index":108,"title":{},"body":{"classes/MovementDto.html":{}}}],["src/interface/movements.dto.ts:38",{"_index":205,"title":{},"body":{"classes/ValidateMovementsDto.html":{}}}],["src/interface/movements.dto.ts:43",{"_index":204,"title":{},"body":{"classes/ValidateMovementsDto.html":{}}}],["src/main.ts",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":287,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":290,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":292,"title":{},"body":{"index.html":{}}}],["started",{"_index":265,"title":{"index.html":{}},"body":{}}],["starter",{"_index":278,"title":{},"body":{"index.html":{}}}],["statements",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":333,"title":{},"body":{"index.html":{}}}],["string",{"_index":61,"title":{},"body":{"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{}}}],["sum",{"_index":167,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["super",{"_index":88,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["support",{"_index":309,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":366,"title":{},"body":{"modules.html":{}}}],["table",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":295,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":298,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":297,"title":{},"body":{"index.html":{}}}],["tests",{"_index":293,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":348,"title":{},"body":{"index.html":{}}}],["this.checkbalance(balances",{"_index":139,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["this.details",{"_index":91,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["this.getduplicateoperations(operations",{"_index":149,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["this.movementvalidationservice.validate(operations",{"_index":233,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{}}}],["this.sortbydate(operations",{"_index":137,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["this.type",{"_index":89,"title":{},"body":{"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Reason.html":{}}}],["this.validatemovementsusecase.execute(payload",{"_index":194,"title":{},"body":{"controllers/MovementsController.html":{}}}],["time",{"_index":325,"title":{},"body":{"index.html":{}}}],["touch",{"_index":356,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":68,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{},"dependencies.html":{}}}],["true",{"_index":75,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["true})@type(undefined",{"_index":203,"title":{},"body":{"classes/ValidateMovementsDto.html":{}}}],["twitter",{"_index":362,"title":{},"body":{"index.html":{}}}],["type",{"_index":52,"title":{},"body":{"classes/Balance.html":{},"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":374,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":277,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":157,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{}}}],["unit",{"_index":294,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":373,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":335,"title":{},"body":{"index.html":{}}}],["using",{"_index":326,"title":{},"body":{"index.html":{}}}],["validate",{"_index":118,"title":{},"body":{"classes/MovementValidationService.html":{},"controllers/MovementsController.html":{}}}],["validate(@body",{"_index":192,"title":{},"body":{"controllers/MovementsController.html":{}}}],["validate(operations",{"_index":126,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["validate(payload",{"_index":182,"title":{},"body":{"controllers/MovementsController.html":{}}}],["validatemovementsdto",{"_index":73,"title":{"classes/ValidateMovementsDto.html":{}},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"controllers/MovementsController.html":{},"classes/ValidateMovementsDto.html":{},"coverage.html":{}}}],["validatemovementsusecase",{"_index":11,"title":{"injectables/ValidateMovementsUseCase.html":{}},"body":{"modules/AppModule.html":{},"controllers/MovementsController.html":{},"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["validatemovementsusecaseinput",{"_index":214,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["validatemovementsusecaseoutput",{"_index":217,"title":{},"body":{"injectables/ValidateMovementsUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["validatenested",{"_index":66,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{}}}],["validation",{"_index":197,"title":{},"body":{"controllers/MovementsController.html":{}}}],["validation.service",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/ValidateMovementsUseCase.html":{}}}],["validation.service.ts",{"_index":113,"title":{},"body":{"classes/MovementValidationService.html":{},"coverage.html":{}}}],["validation.service.ts:29",{"_index":125,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["validation.service.ts:33",{"_index":120,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["validation.service.ts:5",{"_index":127,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["validation.service.ts:51",{"_index":123,"title":{},"body":{"classes/MovementValidationService.html":{}}}],["validator",{"_index":67,"title":{},"body":{"classes/BalanceDto.html":{},"classes/MovementDto.html":{},"classes/ValidateMovementsDto.html":{},"dependencies.html":{}}}],["version",{"_index":371,"title":{},"body":{"properties.html":{}}}],["video",{"_index":318,"title":{},"body":{"index.html":{}}}],["visit",{"_index":305,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":320,"title":{},"body":{"index.html":{}}}],["watch",{"_index":288,"title":{},"body":{"index.html":{}}}],["website",{"_index":360,"title":{},"body":{"index.html":{}}}],["wording",{"_index":71,"title":{},"body":{"classes/BalanceDto.html":{},"classes/DuplicatedReason.html":{},"classes/MismatchReason.html":{},"classes/Movement.html":{},"classes/MovementDto.html":{},"classes/Reason.html":{},"classes/ValidateMovementsDto.html":{}}}],["working",{"_index":303,"title":{},"body":{"index.html":{}}}],["x",{"_index":337,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":352,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nValidateMovementsUseCase\n\nValidateMovementsUseCase\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nValidateMovementsUseCase->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ValidateMovementsUseCase\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MovementsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MovementsController } from './interface/controllers/movements.controller';\nimport { ValidateMovementsUseCase } from './application/use-case/validate-movements.use-case';\nimport { MovementValidationService } from './domain/services/movement-validation.service';\n@Module({\n  imports: [],\n  controllers: [MovementsController],\n  providers: [MovementValidationService, ValidateMovementsUseCase],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Balance.html":{"url":"classes/Balance.html","title":"class - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/balance.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                balance\n                            \n                            \n                                    Public\n                                    Readonly\n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: Date, balance: number)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/balance.entity.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        balance\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/balance.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/balance.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Balance {\n    constructor(\n      public readonly date: Date,\n      public readonly balance: number\n    ) {}\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BalanceDto.html":{"url":"classes/BalanceDto.html","title":"class - BalanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BalanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/movements.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                balance\n                            \n                            \n                                    \n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsArray,\n    IsDateString,\n    IsNumber,\n    IsString,\n    ValidateNested,\n  } from 'class-validator';\n  import { Type } from 'class-transformer';\n  \n\nexport class BalanceDto {\n    @IsDateString()\n    date: string;\n  \n    @IsNumber()\n    balance: number;\n}\n\nexport class MovementDto {\n    @IsNumber()\n    id: number;\n  \n    @IsDateString()\n    date: string;\n  \n    @IsString()\n    wording: string;\n  \n    @IsNumber()\n    amount: number;\n}\n\n\nexport class ValidateMovementsDto {\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => MovementDto)\n    movements: MovementDto[];\n\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => BalanceDto)\n    balances: BalanceDto[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicatedReason.html":{"url":"classes/DuplicatedReason.html","title":"class - DuplicatedReason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicatedReason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/reason.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Reason\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id, wording, date)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/reason.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wording\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Reason\n\n                            \n                        \n                    \n                        \n                                Defined in         Reason:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Reason\n\n                            \n                        \n                    \n                        \n                                Defined in         Reason:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Reason {\n  type: string;\n  details: string;\n}  \n\n\nexport class DuplicatedReason extends Reason {\n  constructor(id, wording, date){\n    super()\n    this.type = \"duplicate_operations\";\n    this.details = `Duplicate operations detected: for ID ${id}, ${wording} at ${date.toISOString()}`\n  }\n}\n\nexport class MismatchReason extends Reason {\n  constructor(date, balance){\n    super()\n    this.type = \"balance_mismatch\";\n    this.details = `Balance mismatch on ${date.toISOString()}: expected ${balance}`\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MismatchReason.html":{"url":"classes/MismatchReason.html","title":"class - MismatchReason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MismatchReason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/reason.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Reason\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date, balance)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/reason.entity.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        balance\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Reason\n\n                            \n                        \n                    \n                        \n                                Defined in         Reason:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Reason\n\n                            \n                        \n                    \n                        \n                                Defined in         Reason:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Reason {\n  type: string;\n  details: string;\n}  \n\n\nexport class DuplicatedReason extends Reason {\n  constructor(id, wording, date){\n    super()\n    this.type = \"duplicate_operations\";\n    this.details = `Duplicate operations detected: for ID ${id}, ${wording} at ${date.toISOString()}`\n  }\n}\n\nexport class MismatchReason extends Reason {\n  constructor(date, balance){\n    super()\n    this.type = \"balance_mismatch\";\n    this.details = `Balance mismatch on ${date.toISOString()}: expected ${balance}`\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Movement.html":{"url":"classes/Movement.html","title":"class - Movement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Movement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/movement.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                amount\n                            \n                            \n                                    Public\n                                    Readonly\n                                date\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                wording\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, date: Date, wording: string, amount: number)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entities/movement.entity.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wording\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/movement.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/movement.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/movement.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        wording\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/movement.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Movement {\n    constructor(\n      public readonly id: number,\n      public readonly date: Date,\n      public readonly wording: string,\n      public readonly amount: number\n    ) {}\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MovementDto.html":{"url":"classes/MovementDto.html","title":"class - MovementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MovementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/movements.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                wording\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        wording\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsArray,\n    IsDateString,\n    IsNumber,\n    IsString,\n    ValidateNested,\n  } from 'class-validator';\n  import { Type } from 'class-transformer';\n  \n\nexport class BalanceDto {\n    @IsDateString()\n    date: string;\n  \n    @IsNumber()\n    balance: number;\n}\n\nexport class MovementDto {\n    @IsNumber()\n    id: number;\n  \n    @IsDateString()\n    date: string;\n  \n    @IsString()\n    wording: string;\n  \n    @IsNumber()\n    amount: number;\n}\n\n\nexport class ValidateMovementsDto {\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => MovementDto)\n    movements: MovementDto[];\n\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => BalanceDto)\n    balances: BalanceDto[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MovementValidationService.html":{"url":"classes/MovementValidationService.html","title":"class - MovementValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MovementValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/movement-validation.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBalance\n                            \n                            \n                                getDuplicateOperations\n                            \n                            \n                                sortByDate\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBalance\n                        \n                    \n                \n            \n            \n                \ncheckBalance(balances: Balance[], movements: Movement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/movement-validation.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                balances\n                                            \n                                                            Balance[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                movements\n                                            \n                                                            Movement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Balance[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDuplicateOperations\n                        \n                    \n                \n            \n            \n                \ngetDuplicateOperations(operations: Movement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/movement-validation.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operations\n                                            \n                                                            Movement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Movement[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortByDate\n                        \n                    \n                \n            \n            \n                \nsortByDate(operations: Movement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/movement-validation.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operations\n                                            \n                                                            Movement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Movement[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(operations: Movement[], balances: Balance[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/movement-validation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operations\n                                            \n                                                            Movement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                balances\n                                            \n                                                            Balance[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Movement } from '../entities/movement.entity';\nimport { Balance } from '../entities/balance.entity';\nimport { Reason, MismatchReason, DuplicatedReason } from \"../entities/reason.entity\";\nexport class MovementValidationService {\n  validate(operations: Movement[], balances: Balance[]): { isValid: boolean; reasons?: Reason[] } {\n    const reasons: Reason[] = [];\n\n    const sortedOperations = this.sortByDate(operations);\n\n    const mismatchpoint = this.checkBalance(balances, sortedOperations);\n    if (mismatchpoint.length > 0) {\n      mismatchpoint.forEach(point => {\n        reasons.push(new MismatchReason(point.date, point.balance));\n      });\n    }\n\n    // Check duplicated operations\n    const duplicateOperations = this.getDuplicateOperations(operations);\n    if (duplicateOperations.length > 0) {\n      duplicateOperations.forEach(dup => {\n        reasons.push(new DuplicatedReason(dup.id, dup.wording, dup.date));\n      });\n      \n    }\n\n    return { isValid: reasons.length === 0, reasons: reasons.length > 0 ? reasons : undefined };\n  }\n\n  sortByDate(operations: Movement[]): Movement[] {\n    return operations.sort((a, b) => a.date.getTime() - b.date.getTime());\n  }\n\n  checkBalance(balances: Balance[], movements: Movement[]): Balance[] {\n    const mismatchPoints: Balance[] = [];\n\n    balances.forEach((balancePoint) => {\n      const cumulativeBalance = movements\n        .filter((op) => op.date  sum + op.amount, 0);\n\n        \n      if (cumulativeBalance !== balancePoint.balance) { \n        console.log(movements, balancePoint);\n        mismatchPoints.push(balancePoint);\n      }\n    });\n\n    return mismatchPoints\n  }\n\n  getDuplicateOperations(operations: Movement[]): Movement[] {\n    return operations.filter(\n      (op, index, self) => self.findIndex((o) => o.id === op.id) !== index\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MovementsController.html":{"url":"controllers/MovementsController.html","title":"controller - MovementsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MovementsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/controllers/movements.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /movements\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: ValidateMovementsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/validation')\n                \n            \n\n                    \n                        \n                            Defined in src/interface/controllers/movements.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ValidateMovementsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { message: string; reasons?: undefined; } | { message: string; reasons: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { ValidateMovementsUseCase } from '../../application/use-case/validate-movements.use-case';\nimport { ValidateMovementsDto } from '../movements.dto';\n\n@Controller('/movements')\nexport class MovementsController {\n  constructor(private readonly validateMovementsUseCase: ValidateMovementsUseCase) { }\n\n  @Post('/validation')\n  validate(@Body() payload: ValidateMovementsDto) {\n    const result = this.validateMovementsUseCase.execute(payload);\n\n    if (result.isValid) return { message: 'Accepted' };\n    \n    return {\n      message: 'Validation failed',\n      reasons: result.reasons,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reason.html":{"url":"classes/Reason.html","title":"class - Reason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/reason.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/reason.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entities/reason.entity.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Reason {\n  type: string;\n  details: string;\n}  \n\n\nexport class DuplicatedReason extends Reason {\n  constructor(id, wording, date){\n    super()\n    this.type = \"duplicate_operations\";\n    this.details = `Duplicate operations detected: for ID ${id}, ${wording} at ${date.toISOString()}`\n  }\n}\n\nexport class MismatchReason extends Reason {\n  constructor(date, balance){\n    super()\n    this.type = \"balance_mismatch\";\n    this.details = `Balance mismatch on ${date.toISOString()}: expected ${balance}`\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateMovementsDto.html":{"url":"classes/ValidateMovementsDto.html","title":"class - ValidateMovementsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateMovementsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/movements.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                balances\n                            \n                            \n                                    \n                                    \n                                    \n                                movements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        balances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BalanceDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        movements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MovementDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/interface/movements.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsArray,\n    IsDateString,\n    IsNumber,\n    IsString,\n    ValidateNested,\n  } from 'class-validator';\n  import { Type } from 'class-transformer';\n  \n\nexport class BalanceDto {\n    @IsDateString()\n    date: string;\n  \n    @IsNumber()\n    balance: number;\n}\n\nexport class MovementDto {\n    @IsNumber()\n    id: number;\n  \n    @IsDateString()\n    date: string;\n  \n    @IsString()\n    wording: string;\n  \n    @IsNumber()\n    amount: number;\n}\n\n\nexport class ValidateMovementsDto {\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => MovementDto)\n    movements: MovementDto[];\n\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => BalanceDto)\n    balances: BalanceDto[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateMovementsUseCase.html":{"url":"injectables/ValidateMovementsUseCase.html","title":"injectable - ValidateMovementsUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidateMovementsUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-case/validate-movements.use-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(movementValidationService: MovementValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-case/validate-movements.use-case.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        movementValidationService\n                                                  \n                                                        \n                                                                        MovementValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(data: ValidateMovementsUseCaseInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/use-case/validate-movements.use-case.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ValidateMovementsUseCaseInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidateMovementsUseCaseOutput\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MovementValidationService } from '../../domain/services/movement-validation.service';\nimport { Movement } from '../../domain/entities/movement.entity';\nimport { Reason } from \"../../domain/entities/reason.entity\";\nimport { Balance } from '../../domain/entities/balance.entity';\nimport { BalanceDto, MovementDto } from '../../interface/movements.dto';\nimport { Injectable } from '@nestjs/common';\n\nexport type ValidateMovementsUseCaseInput = {\n  movements: MovementDto[];\n  balances: BalanceDto[];\n};\n\nexport type ValidateMovementsUseCaseOutput = {\n  isValid: boolean;\n  reasons: Reason[];\n};\n\n@Injectable()\nexport class ValidateMovementsUseCase {\n  constructor(private movementValidationService: MovementValidationService) {}\n  execute(data: ValidateMovementsUseCaseInput): ValidateMovementsUseCaseOutput {\n\n    const operations = data.movements.map(\n      (m) => new Movement(m.id, new Date(m.date), m.wording, m.amount)\n    );\n    const balances = data.balances.map(\n      (b) => new Balance(new Date(b.date), b.balance)\n    );\n    \n    const result = this.movementValidationService.validate(operations, balances);\n\n    return {\n      isValid: result.isValid,\n      reasons: result.reasons\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/use-case/validate-movements.use-case.ts\n            \n            injectable\n            ValidateMovementsUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/application/use-case/validate-movements.use-case.ts\n            \n            type alias\n            ValidateMovementsUseCaseInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/application/use-case/validate-movements.use-case.ts\n            \n            type alias\n            ValidateMovementsUseCaseOutput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/entities/balance.entity.ts\n            \n            class\n            Balance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/entities/movement.entity.ts\n            \n            class\n            Movement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/entities/reason.entity.ts\n            \n            class\n            DuplicatedReason\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/entities/reason.entity.ts\n            \n            class\n            MismatchReason\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/entities/reason.entity.ts\n            \n            class\n            Reason\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/services/movement-validation.service.ts\n            \n            class\n            MovementValidationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interface/controllers/movements.controller.ts\n            \n            controller\n            MovementsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/movements.dto.ts\n            \n            class\n            BalanceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interface/movements.dto.ts\n            \n            class\n            MovementDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interface/movements.dto.ts\n            \n            class\n            ValidateMovementsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nValidateMovementsUseCase\n\nValidateMovementsUseCase\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nValidateMovementsUseCase->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ValidateMovementsUseCaseInput   (src/.../validate-movements.use-case.ts)\n                        \n                        \n                            ValidateMovementsUseCaseOutput   (src/.../validate-movements.use-case.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/application/use-case/validate-movements.use-case.ts\n    \n    \n        \n            \n                \n                    \n                    ValidateMovementsUseCaseInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValidateMovementsUseCaseOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
